import Head from "next/head";
import { useEffect, useState } from "react";
import NewEmployeeForm from "./NewEmployeeForm";
import useSWR from "swr";
import UpdateEmployeeForm from "./UpdateEmployeeForm";

export default function Home() {
  const [employees, setEmployees] = useState([]);
  const [showData, setShowData] = useState(false);

  // const { data, isLoading, mutate } = useSWR(`/api/employees/${id}`);
  const { data, isLoading, mutate } = useSWR(`/api/employees`);

  const fetchData = async () => {
    try {
      const response = await fetch("/api/employees");
      const data = await response.json();
      setEmployees(data);
      setShowData(true);
    } catch (error) {
      console.error("Error fetching data:", error);
    }
  };

  const hideData = () => {
    setShowData(false);
  };

  useEffect(() => {
    fetchData();
  }, []);

  async function updateAnEmployee(id, data) {
    try {
      const response = await fetch(`/api/employees/${id}`, {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      });

      if (response.ok) {
        mutate();
      }
    } catch (error) {
      console.error("Error updating item:", error);
    }
  }

  const deleteAnEmployee = async (idToDelete) => {
    try {
      await fetch(`/api/employees/${idToDelete}`, {
        method: "DELETE",
      });
      // Manually update the items state after deletion
      const updatedItems = employees.filter((item) => item._id !== idToDelete);
      setEmployees(updatedItems);
    } catch (error) {
      console.error("Error deleting item:", error);
    }
  };

  return (
    <>
      <Head>
        <title>Employee App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <button onClick={fetchData}>Fetch all employees</button>
      {showData && employees && (
        <div>
          {/* <button onClick={hideData}>Hide Data</button> */}
          <h2>Response Data: {employees.length}</h2>
          <ul>
            {employees.map(
              ({ _id, firstName, lastName, position, supervisor }) => (
                <li key={_id}>
                  {firstName} {lastName} {position}
                  <button
                    onClick={() =>
                      updateAnEmployee(_id, {
                        firstName,
                        lastName,
                        position,
                        supervisor,
                      })
                    }
                  >
                    Update
                  </button>
                  <button onClick={() => deleteAnEmployee(_id)}>Delete</button>
                </li>
              )
            )}
          </ul>
          <NewEmployeeForm />
        </div>
      )}
    </>
  );
}
